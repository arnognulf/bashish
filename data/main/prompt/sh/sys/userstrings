#!/bin/sh
##################################################################################
## Bashish, a console theme engine
## Copyright (C) 2010 Thomas Eriksson
##
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation; either version 2
## of the License, or (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
########################################################
##
## This module contain the following userstring functions
##
## prompt() -- changes a user configurable string in the prompt
## title() -- changes a user configurable string in the title
## name() -- changes a user configurable string in both the prompt and the title
##
########################################################
##
## The userstring functions are supposed to be set for each terminal
## they are supposed to export their strings to subshells,
## but not affect other non-child terminals
##
########################################################
##
## NOTE! Incomplete, buggy and non-POSIX shells may parse
## this file, so no ksh-specific code will be accepted in here
##
######################################################################

## set default title
title ()
{
	## set non-permanent title
	case "$@" in
	-h*) printf "\
title() is part of Bashish by Thomas Eriksson.
title sets the terminal window title.
Usage: title [-n] [TITLE]
-n sets a non-permanent title, otherwise the title will be re-set each time the prompt is displayed
Without argument, a default title will be set.
"
	return 1
	;;
	-n*) shift; $_typeset TITLESTR;;
	esac
	if test "x$*" = x
	then
		TITLESTR="${TITLE}"		
	else
		TITLESTR="$*"
	fi
	
	printf "USER_TITLE=\"${TITLESTR}\"" >"$HOME/.bashish/tmp/${TTY##*/}/subproc"
}

## set default prompt string
prompt ()
{
	case "$@" in
	-h*) printf "\
prompt() is part of Bashish by Thomas Eriksson.
prompt sets the terminal prompt string

Usage: prompt [PROMPT]
Without argument, a default prompt will be set.
"
	return 1
	esac
	
	if test "x$*" = x
	then
		PROMPTSTR=""
	else
		PROMPTSTR="$*"
	fi	
	_bashish_promptupdate
}

## name, set prompt and title of current terminal [NAME]
name()
{
	case "$@" in
	-h*) printf "\
name() is part of Bashish by Thomas Eriksson.
name sets the terminal prompt and title string in bashish.

Usage: name [PROMPT]
Without argument, a default prompt and title will be set.
"
	return 1
	esac

	title "$@"
	prompt "$@"
}

## color 
color()
{
	typeset ARG 2>/dev/null
	case "$@" in
	-h*) printf "\
color() is part of Bashish by Thomas Eriksson.
color sets the color style for the prompt in bashish (if supported by the prompt).

Usage: color [PROMPT]
Without argument, a default prompt color will be set
"
	return 1
	esac
	if test "x$1" = x
	then
		. "$HOME/.bashish/prompt/argv.sh"
	else
		eval "_bashish_prompt_argv() { "$(for ARG in "$@"; do printf "printf \"$ARG\";";done)" }"
	fi
	_bashish_promptupdate
}
