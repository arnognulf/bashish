.TH bashish 1  "February 30, 2010" "version @PACKAGE_VERSION@" "USER COMMANDS"


.SH NAME
bashish \- theme changer for Bashish

.SH SYNOPSIS 
.B  bashish \fB[\fIOPTION\fB]\fR

.SH DESCRIPTION 
.PP
Bashish is a theme enviroment for text terminals. It can change colors, font,
transparency and background image on a per-application basis. Additionally
Bashish supports prompt changing on common shells such as bash, zsh and tcsh.
.TP
There is no need to restart the shell after \fIbashish\fP has been issued.
.SH OPTIONS 
.PP
If invoked without options, \fIbashish\fP will start the dialog based theme changer frontend.
.TP

\fB-h, --help
short help
.TP
\fB-a, --about
display theme information
.TP
\fB-l, --list
list avaliable themes in the global theme directories of bashish
.TP
\fBsave
This option will save the theme to its theme directory, and reload it if no
parsing errors can be found.
When saving a theme, the current working directory must contain the theme to be saved.

.SH "SEE ALSO"
.PD 0
.TP
\fIThe Bashish Documentation\fP, Thomas Eriksson
.TP
\fIbashish\fP(1)
.TP
.SH Creating themes
First of all, stay current to the latest Bashish release by cloning from Github, in this example we assume that your coding directory is ${HOME}/hacking:

$ git clone git://github.com/arnognulf/bashish.git ${HOME}/hacking/bashish 

Change ${HOME}/hacking to something more appropriate.

Install Bashish locally (assuming you install stuff locally under ${HOME}/Unix as in good Ole' NeXTSTEP):

.ct
$ cd ${HOME}/hacking/bashish
.ct
$ ./autogen.sh --prefix=${HOME}/Unix
.ct
$ make install

Run bashish one time to install nescessary config files in your home dir:

.ct
$ bashish

If you get A FISH HERE WOO 

To develop themes and submit them to the theme author, the recommended way to save themes to the Bashish source directory, create a link from your .bashish directory by doing this:

.TP $ rmdir ${HOME}/.bashish/themes
.TP $ ln -s ${HOME}/hacking/bashish/data/themes ${HOME}/.bashish/themes

.SH PROMPT variables

.TS
center allbox tab(|);
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l
l l l l.
Bashish | Bash | Zsh | Description
${USER} | \\u  | %u |
${HOSTNAME%%.*} | \\h | %h | the username of the current user
${BEL} | \\a | | an ASCII bell character (07)
${DATE} |\\d | | the date in "Weekday Month Date" format (e.g., "Tue May 26")
? | \\D{format} |  i | the format is passed to strftime(3) and the result is inserted into the prompt
${ESC} | \\e | ? | an ASCII escape character (033)
${HOSTNAME%%.*} | \\h | i | the hostname up to the first ‘.’
${HOSTNAME} | \\H | ? | the hostname
? | \\j | | the number of jobs currently managed by the shell
? | \\l | | the basename of the shell’s terminal device name
? | \\n | ? | newline 
? | \\r | | carriage return
${0##*/} | \\s | | the  name  of  the  shell
${TIME} | \\t | | the current time in 24-hour HH:MM:SS format
? | \\T | | the current time in 12-hour HH:MM:SS format
? | \\@ | | the current time in 12-hour am/pm format
? | \\A | | the current time in 24-hour HH:MM format
${USER} | \\u | | the username of the current user
? | \\v | | the version of bash (e.g., 2.00)
? | \\V | | the release of bash, version + patch level (e.g., 2.00.0)
${PWD} | \w | | the current working directory, with $HOME abbreviated with a tilde
${PWD##*/}g | \W | | the basename of the current working directory, with $HOME abbreviated  with  a
? |  | | the history number of this command
? | \# | | the command number of this command
? | \\$ | | if the effective UID is 0, a #, otherwise a $
? | \\nnn | | the character corresponding to the octal number nnn
? | \\ | | a backslash
${EMBED} | \\[ | | begin a sequence of non-printing characters
${UNEMBED} | \\] | | end a sequence of non-printing characters
.TE

BG
BLACK
BLUE
BOLD
BRIGHTBG
CURBACK
CURDOWN
CURFWD
CURUP
CYAN
DATE
DULL
EMBED
ESC
FG
GREEN
MAGENTA
NORMAL
RED
RESTORECUR
SETCOLOR
SETCURPOS
SETSCROLLREG
STORECUR
UNEMBED
WHITE
YELLOW
bashish   bash zsh\n
.ct
\tfoo\tbar\tbaz\n
bar

.SH TERMINAL variables

.SH COPYRIGHT 
bashish is Copyright (c) 1999-2010 Thomas Eriksson.

This program is free software; you can redistribute it and/or modify 
it under the terms of the GNU General Public License as published 
by the Free Software Foundation; either version 2 of the License, 
or (at your option) any later version.

This program is distributed in the hope that it will be useful, 
but WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
GNU General Public License for more details.

You should have received a copy of the GNU General Public License 
along with this program; if not, write to the Free Software 
Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
MA 02111-1307 USA.

.SH BUGS
.TP
One or two bugs may exist in bashish.

.SH AUTHORS 
Thomas \'arne\' Eriksson <arne@users.sourceforge.net> is the author of Bashish and this manual page.
Patches and fixes from people listed in CREDITS.

